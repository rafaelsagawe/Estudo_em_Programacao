Entity Framework Code-First - Partindo de uma base existente e melhorando a nomenclatura
https://www.youtube.com/watch?v=06ozoMruX_o

DevMedia: 5 minutos: Como conectar ao PostgreSQL no Entity Framework
https://www.youtube.com/watch?v=dexYwp7OpiI

Como usar o MySQL com o Entity Framework no ASP.NET Core
https://www.youtube.com/watch?v=_jdsAOGiiC8&t=2s

Criando uma Aplicação WEB MVC com .NET 5 e MySQL no Visual Studio 2019 - Parte1 - NET01
https://www.youtube.com/watch?v=ImfwOTYqR3U

***NOVA SÉRIE*** AULA 3 - Desenvolvimento do Sistema E-Commerce DDD ASP.NET CORE 3.1.6 C#
https://www.youtube.com/watch?v=SkbemA0v22Q&list=PLP8qOphXwRnIqrLjD3KlaWRj2a4HJmYhu&index=18

( Cadastro de Usuários ) - ASP.NET CORE 3.1 C# Com Banco de dados MYSQL
https://www.youtube.com/watch?v=pMdVoNpaqA8&list=PL1UuH6OZy3meoTjaeFr1qcgoWDvOlkU2M&index=5&t=856s

Criando Aplicação Basica com Asp.Net Core 3.1
https://www.youtube.com/watch?v=kz-iw54NdO4&t=1235s

Site de Viagens - Sistema de Login + CRUD (ASP.NET Core MVC)
https://www.youtube.com/watch?v=nbKOHu7tpqM


Sistema de Blog 

0 Páginas Estasticas
0.1 Home
0.2 Privacidade

0.3 Sobre

Foi adicionado criando uma action na HomeController;
==============================================
        public IActionResult Sobre()
        {
            return View();
        }
==============================================
O arquivo Sobre.cshtml na pasta da Views/Home
E o menu é insirido a estrutura no arquivo _Layout.cshtml;
==============================================
        <li class="nav-item">
        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Sobre">Sobre</a>
        </li>
==============================================

o Sistema deve ter:
1 - Posts;

1.1 - Model:
1.1.1 - IDPost;
1.1.2 - NomePost;
1.1.3 - ResumoPost;
1.1.4 - ConteudoPost;
1.1.5 - CategoriasPost;
1.1.6 - DataPost;

1.2 - View
1.2.1 - Lista deve conter:
1.2.1.1 - NomePost;
1.2.1.2 - ResumoPost;
1.2.1.3 - ConteudoPost;

------------------------------------
2 - Os posts devem ter categorias (Área administrativa);
2.1 - IDCategoria
2.2 - NomeCategoria (obrigatorio);
2.3 - DescricaaCategoria;

3 - Autenticação de Usuários;

4 - Cada Usuário pode editar apenas seus posts;

5 - Todos os Usuários podem ver os posts dos outros;

6 - Perfil de administrador com poder total sobre a plataforma;

7 - Banner com a contagem de posts, categorias e usuários no rodapé;

X - Trasferir para SGBD de grande porte;

X - Hospedar em servidor Linux;


Desenvolvimento 

Aplicativo web asp.net Core (MVC) -> o MVC proporciona melhor organização no desenvolvimento das aplicacações.

* Model é criada através de arquivos do tipo "Classe";
* Habilitar os dataAnotations - "using System.ComponentModel.DataAnnotations;";