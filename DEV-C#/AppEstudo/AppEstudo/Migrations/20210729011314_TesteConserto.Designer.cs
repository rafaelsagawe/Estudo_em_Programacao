// <auto-generated />
using System;
using AppEstudo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppEstudo.Migrations
{
    [DbContext(typeof(AppEstudoContext))]
    [Migration("20210729011314_TesteConserto")]
    partial class TesteConserto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppEstudo.Models.CadPessoa", b =>
                {
                    b.Property<int>("IdPessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomePrimeiro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubreNome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPessoa");

                    b.ToTable("CadPessoa");
                });

            modelBuilder.Entity("AppEstudo.Models.Conserto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoDefeito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoSolucao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeFuncionario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePeca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorMaoObra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTotalConserto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Conserto");
                });

            modelBuilder.Entity("AppEstudo.Models.ConsertoDetalhes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConsertoId")
                        .HasColumnType("int");

                    b.Property<int>("PecasId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ConsertoId");

                    b.ToTable("ConsertoDetalhes");
                });

            modelBuilder.Entity("AppEstudo.Models.ConsertoDetalhes", b =>
                {
                    b.HasOne("AppEstudo.Models.Conserto", "Conserto")
                        .WithMany()
                        .HasForeignKey("ConsertoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conserto");
                });
#pragma warning restore 612, 618
        }
    }
}
